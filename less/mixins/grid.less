// ==========================================================================
// Grid
// ==========================================================================

#grid {
  .core {
    .row {
      width: 100%;
      overflow: hidden;
      list-style: none;
      font-size:0;
      letter-spacing: -4px;  /* Fix inline-block weirdness */
      .column, [class*="span-"], [class*="column-"] {
        vertical-align: top;
        display: inline-block;
        .box-sizing(border-box);
        font-size: @baseFontSize;
        letter-spacing: 0; /* Restore letter spacing. */
        min-height: 1px; /* prevent collapsing columns */
        *display: inline; /* For IE6/IE7 */
        *zoom: 1; /* For IE6/IE7 */
      }
    }
  }

  .default(@gridColumnWidth, @gridGutterWidth) {
    .row {
      [class*="span-"] {
        width: percentage(1 - (@gridGutterWidth / ((@gridColumnWidth + @gridGutterWidth) * @gridColumns)));
        margin-right: @gridGutterWidth *.5;
        margin-left:  @gridGutterWidth *.5;
      }
      .span-N (@spanNum) when (@spanNum > 0) {
        (~".span-@{spanNum}") {.span(@spanNum);}
        .span-N(@spanNum - 1);
      }
      .span-N (0) {}

      .prefix-N (@prefixNum) when (@prefixNum > 0) {
        (~".prefix-@{prefixNum}") { .prefix(@prefixNum); }
        .prefix-N(@prefixNum - 1);
      }
      .prefix-N (0) {}

      .suffix-N (@suffixNum) when (@suffixNum > 0) { 
        (~".suffix-@{suffixNum}") { .suffix(@suffixNum); }
        .suffix-N(@suffixNum - 1);
      }
      .suffix-N (0) {}

      .span(@spanNum) {
        width: @spanNum * (@gridColumnWidth + @gridGutterWidth) - @gridGutterWidth;
      }

      .prefix(@prefixNum) {
        margin-left:  @prefixNum * (@gridColumnWidth + @gridGutterWidth) + (@gridGutterWidth *.5);
      }

      .suffix(@suffixNum) {
        margin-right: @suffixNum * (@gridColumnWidth + @gridGutterWidth) + (@gridGutterWidth *.5);
      }
      .span-N (@gridColumns);
      .prefix-N (@gridColumns);
      .suffix-N (@gridColumns);
    }
    @media only screen and (max-width: 480px) {
      [class*="span-"], [class*="prefix-"], [class*="suffix-"] {
        width: percentage(1 - (@gridGutterWidth480 / ((@gridColumnWidth480 + @gridGutterWidth480) * @gridColumns))) !important;
        margin-left:  @gridGutterWidth480 *.5 !important;
        margin-right: @gridGutterWidth480 *.5 !important;
      }
    }
  }

  .equalization(@gridColumnWidth, @gridGutterWidth) {
    .row {
      .column {
        width: percentage(1 - (@gridGutterWidth / ((@gridColumnWidth + @gridGutterWidth) * @gridColumns)));
        margin-right: @gridGutterWidth *.5;
        margin-left:  @gridGutterWidth *.5;
      }
    }

    // Default column number
    .columnNum (@num) when (@num > 0) {
      (~".has-@{num}") { .columnWidth(@num); }
      .columnNum(@num - 1);
    }
    .columnNum (0) {}
    .columnWidth(@num) {.column{ width: floor((@gridColumns / @num) * (@gridColumnWidth + @gridGutterWidth) - @gridGutterWidth);}}
    .columnNum(@gridColumns); 

    // width768 column number
    .width768 (@num) when (@num > 0) {
      (~".w768-has-@{num}") { .columnWidth768(@num); }
        .width768(@num - 1);
      }
    .width768 (0) {}
    .columnWidth768(@num) {.column{ width: floor((@gridColumns / @num) * (@gridColumnWidth768 + @gridGutterWidth768) - @gridGutterWidth768);}}

    //width480 column number
    .width480 (@num) when (@num > 0) {
      (~".w480-has-@{num}") { .columnWidth480(@num); }
        .width480(@num - 1);
      }
    .width480 (0) {}
    .columnWidth480(@num) {.column{ width: floor((@gridColumns / @num) * (@gridColumnWidth480 + @gridGutterWidth480) - @gridGutterWidth480);}}
  }

  .percentage {
    .row {
      .one-half, .one-third, .two-third, 
      .one-fourth, .two-fourth, .three-fourth, 
      .one-fifth, .two-fifth, .three-fifth, .four-fifth, 
      .one-sixth, .two-sixth, .three-sixth, .four-sixth, .five-sixth {
        font-size: @baseFontSize;
        letter-spacing: 0;
        display: inline-block;
        margin-right: 1.5%;
        margin-left: 1.5%;
        min-height: 1px; // prevent collapsing columns
        *display: inline; /* For IE6/IE7 */
        *zoom: 1; /* For IE6/IE7 */
      }
      .one-half, .two-fourth, .three-sixth {        width: 48%;}
      .one-third, .two-sixth {                      width: 30.6666%;}
      .two-third, .four-sixth {                     width: 65.3332%;}
      .one-fourth {                                 width: 22%;}
      .three-fourth {                               width: 48%;}
      .one-fifth {                                  width: 16.8%;}
      .two-fifth {                                  width: 37.6%;}
      .three-fifth {                                width: 58.4%;}
      .four-fifth {                                 width: 79.2%;}
      .one-sixth {                                  width: 13.3333%;}
      .five-sixth {                                 width: 82.6665%}
    }
  }

  .specialTypes(@gridColumnWidth, @gridGutterWidth) {
    .row{
      [class*="column-"] {
        width: percentage(1 - (@gridGutterWidth / ((@gridColumnWidth + @gridGutterWidth) * @gridColumns)));
        margin-right: @gridGutterWidth *.5;
        margin-left:  @gridGutterWidth *.5;
      }
      // Two columns 
      &.type-12 {
        .column-1 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (2 * @gridGutterWidth)) * 1)/ 3;}
        .column-2 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (2 * @gridGutterWidth)) * 2)/ 3;}
      }
      &.type-21 {      
        .column-1 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (2 * @gridGutterWidth)) * 2)/ 3;}
        .column-2 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (2 * @gridGutterWidth)) * 1)/ 3;}
      }

      &.type-13 {
        .column-1 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (2 * @gridGutterWidth)) * 1)/ 4;}
        .column-2 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (2 * @gridGutterWidth)) * 3)/ 4;}
      }
      &.type-31 {
        .column-1 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (2 * @gridGutterWidth)) * 3)/ 4;}
        .column-2 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (2 * @gridGutterWidth)) * 1)/ 4;}
      }

      &.type-14 {
        .column-1 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (2 * @gridGutterWidth)) * 1)/ 5;}
        .column-2 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (2 * @gridGutterWidth)) * 4)/ 5;}
      }
      &.type-41 {
        .column-1 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (2 * @gridGutterWidth)) * 4)/ 5;}
        .column-2 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (2 * @gridGutterWidth)) * 1)/ 5;}
      }

      &.type-23 {
        .column-1 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (2 * @gridGutterWidth)) * 2)/ 5;}
        .column-2 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (2 * @gridGutterWidth)) * 3)/ 5;}
      }
      &.type-32 {
        .column-1 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (2 * @gridGutterWidth)) * 3)/ 5;}
        .column-2 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (2 * @gridGutterWidth)) * 2)/ 5;}
      }

      //Three columns
      &.type-112 {
        .column-1 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 1)/ 4;}
        .column-2 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 1)/ 4;}
        .column-3 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 2)/ 4;}
      }
      &.type-211 {
        .column-1 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 2)/ 4;}
        .column-2 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 1)/ 4;}
        .column-3 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 1)/ 4;}
      }
      &.type-121 {
        .column-1 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 1)/ 4;}
        .column-2 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 2)/ 4;}
        .column-3 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 1)/ 4;}
      }

      &.type-123 {
        .column-1 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 1)/ 6;}
        .column-2 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 2)/ 6;}
        .column-3 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 3)/ 6;}
      }
      &.type-213 {
        .column-1 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 2)/ 6;}
        .column-2 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 1)/ 6;}
        .column-3 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 3)/ 6;}
      }
      &.type-312 {
        .column-1 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 3)/ 6;}
        .column-2 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 1)/ 6;}
        .column-3 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 2)/ 6;}
      }
      &.type-321 {
        .column-1 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 1)/ 6;}
        .column-2 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 2)/ 6;}
        .column-3 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 3)/ 6;}
      }

      &.type-114 {
        .column-1 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 1)/ 6;}
        .column-2 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 1)/ 6;}
        .column-3 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 4)/ 6;}
      }
      &.type-141 {
        .column-1 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 1)/ 6;}
        .column-2 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 4)/ 6;}
        .column-3 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 1)/ 6;}
      }
      &.type-411 {
        .column-1 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 4)/ 6;}
        .column-2 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 1)/ 6;}
        .column-3 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (3 * @gridGutterWidth)) * 1)/ 6;}
      }

      // Four columns
      &.type-1113 {
        .column-1 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (4 * @gridGutterWidth)) * 1)/ 6;}
        .column-2 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (4 * @gridGutterWidth)) * 1)/ 6;}
        .column-3 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (4 * @gridGutterWidth)) * 1)/ 6;}
        .column-4 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (4 * @gridGutterWidth)) * 3)/ 6;}
      }
      &.type-1131{
        .column-1 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (4 * @gridGutterWidth)) * 1)/ 6;}
        .column-2 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (4 * @gridGutterWidth)) * 1)/ 6;}
        .column-3 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (4 * @gridGutterWidth)) * 3)/ 6;}
        .column-4 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (4 * @gridGutterWidth)) * 1)/ 6;}
      }
      &.type-1311{
        .column-1 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (4 * @gridGutterWidth)) * 1)/ 6;}
        .column-2 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (4 * @gridGutterWidth)) * 3)/ 6;}
        .column-3 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (4 * @gridGutterWidth)) * 1)/ 6;}
        .column-4 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (4 * @gridGutterWidth)) * 1)/ 6;}
      }
      &.type-3111 {
        .column-1 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (4 * @gridGutterWidth)) * 3)/ 6;}
        .column-2 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (4 * @gridGutterWidth)) * 1)/ 6;}
        .column-3 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (4 * @gridGutterWidth)) * 1)/ 6;}
        .column-4 { width: ((@gridColumns * (@gridColumnWidth + @gridGutterWidth) - (4 * @gridGutterWidth)) * 1)/ 6;}
      }
    }
    @media only screen and (max-width: 480px) {
      [class*="column-"] {
        width: percentage(1 - (@gridGutterWidth / ((@gridColumnWidth + @gridGutterWidth) * @gridColumns))) !important;    
      }
    }
  }
}